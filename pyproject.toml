[build-system]
requires = [
  "setuptools >= 63.0.0", # required by pyproject+setuptools_scm integration
  "setuptools_scm[toml] >= 7.0.5", # required for "no-local-version" scheme

]
build-backend = "setuptools.build_meta"

[project]
# https://peps.python.org/pep-0621/#readme
requires-python = ">=3.9"
dynamic = ["version", "dependencies", "optional-dependencies"]
name = "molecule"
description = "Molecule aids in the development and testing of Ansible roles"
readme = "README.md"
authors = [{ "name" = "Ansible by Red Hat", "email" = "info@ansible.com" }]
maintainers = [{ "name" = "Ansible by Red Hat", "email" = "info@ansible.com" }]
license = { text = "MIT" }
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python",
  "Topic :: System :: Systems Administration",
  "Topic :: Software Development :: Bug Tracking",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
]
keywords = ["ansible", "roles", "testing", "molecule"]

[project.urls]
homepage = "https://github.com/ansible-community/molecule"
documentation = "https://molecule.readthedocs.io/"
repository = "https://github.com/ansible-community/molecule"
changelog = "https://github.com/ansible-community/molecule/releases"

[project.scripts]
molecule = "molecule.__main__:main"

[project.entry-points."molecule.driver"]
default = "molecule.driver.delegated:Delegated"

[project.entry-points."molecule.verifier"]
testinfra = "molecule.verifier.testinfra:Testinfra"
ansible = "molecule.verifier.ansible:Ansible"

[tool.coverage.run]
source = ["src"]
# branch = true
parallel = true
concurrency = ["multiprocessing", "thread"]
data_file = ".tox/.coverage"
relative_files = true

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
omit = ["test/*"]
fail_under = 88
skip_covered = true

[tool.black]
skip-string-normalization = false

[tool.isort]
profile = "black"
known_first_party = "molecule"

[tool.mypy]
python_version = 3.9
# strict = true
color_output = true
error_summary = true
# disallow_untyped_calls = true
# disallow_untyped_defs = true
# disallow_any_generics = true
# disallow_any_unimported = True
# warn_redundant_casts = True
# warn_return_any = True
# warn_unused_configs = True
# site-packages is here to help vscode mypy integration getting confused
exclude = "(build|dist|test/local-content|site-packages|~/.pyenv|examples/playbooks/collections|plugins/modules)"
# https://github.com/python/mypy/issues/12664
no_incremental = true

[[tool.mypy.overrides]]
module = [
  "click_help_colors", # https://github.com/click-contrib/click-help-colors/issues/20
  "pexpect", # https://github.com/pexpect/pexpect/issues/759
  "pluggy", # https://github.com/pytest-dev/pluggy/pull/414
  "testinfra.*", # https://github.com/pytest-dev/pytest-testinfra/issues/619
  "pytest_mock",
]
ignore_missing_imports = true
ignore_errors = true

[tool.pylint."MESSAGES CONTROL"]
disable = [
  # TODO(ssbarnea): remove temporary skips adding during initial adoption:
  "abstract-method",
  "arguments-differ",
  "broad-except",
  "consider-merging-isinstance",
  # We will clean this up in a dedicated refactoring commit
  "dangerous-default-value",
  "duplicate-code",
  "fixme",
  "import-outside-toplevel",
  "invalid-name",
  "line-too-long",
  "missing-function-docstring",
  "missing-module-docstring",
  "no-member",
  "no-self-argument",
  "no-value-for-parameter",
  "not-callable",
  "protected-access",
  "redefined-builtin",
  "redefined-outer-name",
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-public-methods",
  # Next rule was added because we cannot adjust the open calls during minor
  # releases since there is no guarantee that this will not break existing
  # scenarios (right now, we have no idea what encoding files that molecule
  # wrote to disk have).
  "unspecified-encoding",
  "unused-argument",
  "unused-import",
  "unused-variable",
  "useless-object-inheritance",
  "useless-super-delegation",
]

[tool.pylint.SUMMARY]
# We don't need the score spamming console, as we either pass or fail
score = "n"

[tool.pytest.ini_options]
markers = [
  "serial: Run this test serially via filelock.",
  "extensive: marks tests that we want to skip by default, as they are indirectly covered by other tests",
]
norecursedirs = [
  ".eggs",
  ".tox",
  "build",
  "dist",
  "doc",
  "src/molecule/test/resources",
  "src/molecule/test/scenarios",
]
addopts = "--doctest-modules --durations 10 --color=yes"
doctest_optionflags = ["ALLOW_UNICODE", "ELLIPSIS"]
junit_suite_name = "molecule_test_suite"
testpaths = "src/molecule/test/"
filterwarnings = [
  # treat warnings as errors unless we add them below
  "error",
  # https://github.com/certifi/python-certifi/pull/193
  "ignore:path is deprecated.*:DeprecationWarning",
  # https://github.com/pytest-dev/pytest-cov/issues/557
  "ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning",
  # ignore::UserWarning

]

[tool.ruff]
ignore = [
  # Disabled on purpose:
  "E501", # we use black
  "FBT", # Boolean positional value in function call
  # Temporary disabled until we fix them:
  "A",
  "ANN", # Annotations
  "ARG",
  "B",
  "BLE001",
  "C901",
  "D",
  "E741",
  "EM",
  "INP",
  "N",
  "PGH",
  "PLR",
  "PLW",
  "PT",
  "PTH",
  "RET",
  "SIM",
  "SLF",
  "T",
  "TRY",
]
select = ["ALL"]
target-version = "py39"
# Same as Black.
line-length = 88

[tool.ruff.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.isort]
known-first-party = ["molecule"]

[tool.ruff.per-file-ignores]
"src/molecule/test/**.py" = ["S"]
"src/molecule/*/\\{\\{*/**.py" = ["S"]

[tool.setuptools.dynamic]
optional-dependencies.docs = { file = [".config/requirements-docs.txt"] }
optional-dependencies.test = { file = [".config/requirements-test.txt"] }
optional-dependencies.lock = { file = [".config/requirements-lock.txt"] }
dependencies = { file = [".config/requirements.in"] }

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/molecule/_version.py"
