{%- for platform in config.vagrant.platforms %}
  {%- if platform.name == current_platform %}
    {%- if 'triggers' in platform %}
unless Vagrant.has_plugin?('vagrant-triggers')
  system "vagrant plugin install vagrant-triggers"
  exec "vagrant #{ARGV.join' '}"
end
    {%- endif %}
  {%- endif %}
{%- endfor %}
Vagrant.configure('2') do |config|
  config.cache.scope = 'machine' if Vagrant.has_plugin?('vagrant-cachier')
  {%- for platform in config.vagrant.platforms %}
    {%- if platform.name == current_platform %}
  config.vm.box = '{{ platform.box }}'
      {%- if 'box_version' in platform %}
  config.vm.box_version = "{{ platform.box_version }}"
      {%- endif %}
      {%- if 'box_url' in platform and 'box_version' not in platform %}
  config.vm.box_url = '{{ platform.box_url }}'
      {%- endif %}
      {%- if 'triggers' in platform %}
        {%- for trigger in platform.triggers %}
  config.trigger.{{ trigger.trigger }} :{{ trigger.action }}, :force => true do
    {{ trigger.cmd }}
  end
        {%- endfor %}
      {%- endif %}
    {%- endif %}
  {%- endfor %}

  {%- if 'raw_config_args' in config.vagrant %}
    {%- for line in config.vagrant.raw_config_args %}
  config.{{ line }}
    {%- endfor %}
  {%- endif %}

  {%- for provider in config.vagrant.providers %}
    {%- if provider.type is defined and provider.type == 'virtualbox' and provider.name == current_provider %}
  config.vm.provider :virtualbox do |vb|
    {%- if provider.options %}
      {%- for k, v in provider.options.iteritems()|sort %}
    vb.{{ k }} = {{ v }}
      {%- endfor %}
      {%- if not provider.options.memory %}
    vb.memory = 512
      {%- endif %}
      {%- if not provider.options.cpus %}
    vb.cpus = 2
      {%- endif %}
      {%- if not provider.options.linked_clone %}
    vb.linked_clone = true if Vagrant::VERSION =~ /^1.8/
      {%- endif %}
    {%- else %}
    vb.memory = 512
    vb.cpus = 2
    vb.linked_clone = true if Vagrant::VERSION =~ /^1.8/
    {%- endif %}
  end
    {%- endif %}
    {%- if provider.type is defined and provider.type == 'openstack' and provider.name == current_provider %}
    {%- for pform in provider.platforms %}
      {%- if pform.name == current_platform and 'username' in pform %}
  config.ssh.username    = '{{ pform.username|default('vagrant') }}'
      {%- endif %}
    {%- endfor %}
    {%- if 'private_key_path' in provider %}
  config.ssh.private_key_path   = {{ provider.private_key_path }}
    {%- endif %}
  config.vm.provider :openstack do |os|
    {%- if 'endpoints' in provider %}
      {%- for ep in ['auth_url', 'compute_url', 'image_url', 'network_url', 'volume_url'] %}
        {%- if ep in provider['endpoints'] %}
    os.openstack_{{ ep }} = '{{ provider['endpoints'][ep] }}'
        {%- endif %}
      {%- endfor %}
      {%- if 'auth_url' not in provider.endpoints %}
    os.openstack_auth_url = ENV['OS_AUTH_URL']
      {%- endif %}
    {%- else %}
    os.openstack_auth_url = ENV['OS_AUTH_URL']
    {%- endif %}

    os.username           = {{ provider.username|default('ENV[\'OS_USERNAME\']') }}
    os.password           = {{ provider.password|default('ENV[\'OS_PASSWORD\']') }}
    os.tenant_name        = {{ provider.tenant_name|default('ENV[\'OS_TENANT_NAME\']') }}
    os.region             = {{ provider.region_name|default('ENV[\'OS_REGION_NAME\']') }}
    os.flavor             = '{{ provider.flavor }}'
    os.security_groups    = {{ provider.security_groups|default(['default']) }}
    {#- These next conditional blocks are for provider config that varies by platform #}
    {%- for pform in provider.platforms %}
      {%- if pform.name == current_platform %}
        {%- if 'image' in pform %}
    os.image              = '{{ pform.image }}'
        {%- endif %}
        {%- if 'volume_boot' in pform %}
    os.volume_boot              = '{{ pform.volume_boot }}'
        {%- endif %}
      {%- endif %}
    {%- endfor %}
    {#- Ending platform-specific provider config #}
    {%- for k in ['keypair_name', 'server_name'] %}
    {%- if provider[k] is defined %}
    os.{{ k }}       = '{{ provider[k] }}'
      {%- endif %}
    {%- endfor %}
    {%- if provider.raw_options is defined %}
      {%- for k, v in provider.raw_options.iteritems()|sort %}
    os.{{ k }} = '{{ v }}'
      {%- endfor %}
    {%- endif %}
  end
    {%- endif %}
  {%- endfor %}

  {% for instance in config.vagrant.instances -%}
  config.vm.define '{{ instance.vm_name }}' do |c|
    c.vm.hostname = '{{ instance.vm_name }}'
    {%- for interface in instance.interfaces %}
    c.vm.network '{{ interface.network_name }}', type: '{{ interface.type }}', auto_config: {{ interface.auto_config|lower }}
    # VBox disables promiscuous mode by default.  Enable it.
    c.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, "--nicpromisc{{ 1 + loop.index }}", 'allow-all']
    end
    {%- endfor %}
    {%- if 'raw_config_args' in instance %}
      {%- for line in instance.raw_config_args %}
    c.{{ line }}
      {%- endfor %}
    {%- endif %}
  end
  {% endfor %}
end
