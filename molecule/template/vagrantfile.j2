Vagrant.configure('2') do |config|
  config.cache.scope = 'machine' if Vagrant.has_plugin?('vagrant-cachier')
  {%- for platform in config.vagrant.platforms %}
    {%- if platform.name == current_platform %}
  config.vm.box = '{{ platform.box }}'
      {%- if 'box_version' in platform %}
  config.vm.box_version = "{{ platform.box_version }}"
      {%- endif %}
      {%- if 'box_url' in platform and 'box_version' not in platform %}
  config.vm.box_url = '{{ platform.box_url }}'
      {%- endif %}
    {%- endif %}
  {%- endfor %}

  {%- if 'raw_config_args' in config.vagrant %}
    {%- for line in config.vagrant.raw_config_args %}
  config.{{ line }}
    {%- endfor %}
  {%- endif %}

  {%- for provider in config.vagrant.providers %}
    {# --- virtualbox --- #}
    {%- if provider.type is defined and provider.type == 'virtualbox' and provider.name == current_provider %}
  config.vm.provider 'virtualbox' do |vb|
    {%- if provider.options %}
      {%- for k, v in provider.options.iteritems() | sort %}
        {%- if v == true or v == false %}
    vb.{{ k }} = {{ v | lower }}
        {%- else %}
    vb.{{ k }} = {{ v }}
        {%- endif %}
      {%- endfor %}
      {%- if not provider.options.memory %}
    vb.memory = 512
      {%- endif %}
      {%- if not provider.options.cpus %}
    vb.cpus = 2
      {%- endif %}
      {%- if provider.options.linked_clone is not defined %}
    vb.linked_clone = true if Vagrant::VERSION =~ /^1.8/
      {%- endif %}
    {%- else %}
    vb.memory = 512
    vb.cpus = 2
    vb.linked_clone = true if Vagrant::VERSION =~ /^1.8/
    {%- endif %}
  end
  {%- if 'rhel' in current_platform|lower %}
  # This plugin tries to install packages before the system is registered.  Disable it.
  if Vagrant.has_plugin?('vagrant-vbguest')
    config.vbguest.auto_update = false
  end
  {%- endif %}
    {%- endif %}

    {%- if provider.type is defined and provider.type == 'libvirt' and provider.name == current_provider %}
  config.vm.provider :libvirt do |libvirt|
    {%- if provider.options %}
      {%- for k, v in provider.options.iteritems()|sort %}
      {%- if  v  is number %}
    libvirt.{{ k }} = {{ v }}
      {%- else %}
    libvirt.{{ k }} = "{{ v }}"
      {%- endif %}
      {%- endfor %}
      {%- if not provider.options.memory %}
    libvirt.memory = 512
      {%- endif %}
      {%- if not provider.options.cpus %}
    libvirt.cpus = 2
      {%- endif %}
    {%- else %}
    libvirt.memory = 512
    libvirt.cpus = 2
    {%- endif %}
  end
    {%- endif %}

    {# --- parallels --- #}
    {%- if provider.type is defined and provider.type == 'parallels' and provider.name == current_provider %}
  config.vm.provider 'parallels' do |prl|
    {%- if provider.options %}
      {%- for k, v in provider.options.iteritems()|sort %}
    prl.{{ k }} = {{ v }}
      {%- endfor %}
      {%- if not provider.options.memory %}
    prl.memory = 512
      {%- endif %}
      {%- if not provider.options.cpus %}
    prl.cpus = 2
      {%- endif %}
    {%- else %}
    prl.memory = 512
    prl.cpus = 2
    {%- endif %}
  end
    {%- endif %}

    {# --- fusion --- #}
    {%- if provider.type is defined and provider.type == 'vmware_fusion' and provider.name == current_provider %}
  config.vm.provider 'vmware_fusion' do |v|
    {%- if provider.options %}
      {%- for k, v in provider.options.iteritems()|sort %}
    v.{{ k }} = {{ v }}
      {%- endfor %}
      {%- if not provider.options.memory %}
    v.vmx["memsize"] = 512
      {%- endif %}
      {%- if not provider.options.cpus %}
    v.vmx["numvcpus"] = 2
      {%- endif %}
    {%- else %}
    v.vmx["memsize"] = 512
    v.vmx["numvcpus"] = 2
    {%- endif %}
  end
    {%- endif %}

  {%- endfor %}

  {% for instance in config.vagrant.instances -%}
  config.vm.define '{{ instance.vm_name }}' do |c|
    {%- if 'libvirt' not in config.vagrant.providers|map(attribute='type')|list %}
    c.vm.hostname = '{{ instance.vm_name }}'
    {%- endif %}
    {% if instance.platform %}
    c.vm.box = '{{ instance.platform }}'
    {% endif %}
    {%- for interface in instance.interfaces %}
    c.vm.network '{{ interface.network_name }}', type: '{{ interface.type }}', auto_config: {{ interface.auto_config|lower }}
    {%- if interface.type == 'static' %}, ip: '{{ interface.ip }}' {%- endif -%}
    {%- endfor %}
    {%- if 'raw_config_args' in instance %}
      {%- for line in instance.raw_config_args %}
    c.{{ line }}
      {%- endfor %}
    {%- endif %}
  end
  {% endfor %}
end
