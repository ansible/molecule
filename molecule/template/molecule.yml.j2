---
# role specific overrides for molecule's config options. These will override ALL other config files.
# molecule:
#   # directory in CWD to place all temp files, etc.
#   molecule_dir: .molecule

#   # where temporary state will be stored (lives under molecule_dir)
#   state_file: state

#   # name of temporary vagrantfile created during runs (lives under molecule_dir)
#   vagrantfile_file: vagrantfile
#   rakefile_file: rakefile

#   # directories to ignore when doing trailing whitespace checks on files during verify command
#   ignore_paths:
#     - .git
#     - .vagrant
#     - .molecule

#   # directory to look for serverspec tests
#   serverspec_dir: spec

#   # directory to look for testinfra tests
#   testinfra_dir: tests

#   # template files to load when creating corresponding temporary files
#   # this would be a good place to specify your own ansible.cfg template, for example
#   vagrantfile_template: vagrantfile.j2
#   ansible_config_template: ansible.cfg.j2
#   rakefile_template: rakefile.j2

#   # directory containing group_vars to use with ansible
#   # group_vars: ../../../inventory/my_az/group_vars/

#   # ssh arguments passed to `molecule login` command
#   raw_ssh_args:
#     - -o StrictHostKeyChecking=no
#     - -o UserKnownHostsFile=/dev/null

#   # sequence of commands to run when performing `molecule test`
#   test:
#     sequence:
#       - destroy
#       - create
#       - converge
#       - idempotence
#       - verify

# configuration options for the internal call to ansible-playbook
# ansible:
#   # by default this lives under molecule_dir and is generated by molecule during execution
#   config_file: ansible.cfg

#   # playbook to execute during `molecule converge`
#   playbook: playbook.yml

#   # install role dependencies from that file with `ansible-galaxy` during `molecule converge`
#   requirements_file: requirements.yml

#   # verbosity for ansible-playbook
#   verbose: vvvv

#   # most CLI options to ansible-playbook can be passed in this format, even those not listed
#   user: vagrant
#   connection: ssh
#   timeout: 30
#   sudo: True
#   sudo_user: False
#   ask_sudo_pass: False
#   ask_vault_pass: False
#   vault_password_file: False
#   limit: all
#   diff: True
#   tags: False
#   host_key_checking: False

#   # this can be the path to a custom inventory script/directory
#   # by default this lives under molecule_dir and is generated by molecule during execution
#   inventory_file: ansible_inventory

#   # raw ssh arguments passed to ansible-playbook
#   raw_ssh_args:
#     - -o UserKnownHostsFile=/dev/null
#     - -o IdentitiesOnly=yes
#     - -o ControlMaster=auto
#     - -o ControlPersist=60s

#  # any additional environment variables that ansible-playbook supports can be passed in here
#  raw_env_vars:
#    ANSIBLE_ACTION_PLUGINS: ../plugins

# configuration options for the internal call to vagrant
vagrant:
  # vagrant arguments that are global to all instances
  raw_config_args:
    - "ssh.insert_key = false"
#    - "vm.network 'forwarded_port', guest: 80, host: 8080"

  # molecule's --platform option will look for these names
  platforms:
    - name: {{ config.molecule.init.platform.name }}
      box: {{ config.molecule.init.platform.box }}
      box_url: {{ config.molecule.init.platform.box_url }}
      # Optional: box_version - support for vagrant versioning
      # box_version: {{ config.molecule.init.platform.box_version }}

  providers:
    - name: virtualbox
      type: virtualbox
      options:
        memory: 512
        cpus: 2

  instances:
    - name: {{ role }}-01
      ansible_groups:
        - group_1
        - group_2
      interfaces:
        - network_name: private_network
          type: dhcp
          auto_config: true
      options:
        # prevents vagrant-01 from becoming vagrant-01-rhel-7 (platform is appended by default)
        append_platform_to_hostname: no
      # vagrant arguments specific to this instance
#      raw_config_args:
#        - "vm.synced_folder '../projects/web', '/web'"

#    - name: network-01
#      ansible_groups:
#        - group_1
#        - group_2
#      interfaces:
#        - network_name: private_network
#          type: dhcp
#          auto_config: true
#        - network_name: private_network
#          type: dhcp
#          auto_config: false
#      options:
#        append_platform_to_hostname: no
