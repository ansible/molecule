name: tox

on:
  create: # is used for publishing to PyPI and TestPyPI
    tags: # any tag regardless of its name, no branches
  push: # only publishes pushes to the main branch to TestPyPI
    branches: # any integration branch but not tag
      - "main"
    tags-ignore:
      - "**"
  pull_request:
  schedule:
    - cron: 1 0 * * * # Run daily at 0:01 UTC

jobs:
  pre:
    name: pre
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.generate_matrix.outputs.matrix }}
    steps:
      - name: Determine matrix
        id: generate_matrix
        uses: coactions/dynamic-matrix@v1
        with:
          min_python: "3.9"
          max_python: "3.11"
          other_names: |
            lint
            docs
            pkg
            eco
            py39-devel
            py310-devel

  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: pre
    env:
      PYTEST_REQPASS: 453
    # limit potential endless looks like we had with build-containers
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.pre.outputs.matrix) }}

    steps:
      - name: Check out src from Git
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed by setuptools-scm
      - name: Install system dependencies
        # remove broken .deb ansible and replace with pip version:
        # https://github.com/actions/virtual-environments/issues/3001
        run: |
          sudo apt-get remove -y ansible \
          && sudo apt-get update \
          && sudo apt-get install -y libvirt-dev python3-cryptography python3-jinja2 python3-yaml virtualenv \
          && pip3 install --user ansible-core ansible-lint\
          && echo "$HOME/.local/bin" >> $GITHUB_PATH
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
      - name: Validate that ansible works
        run: |
          ansible --version \
          && virtualenv foo \
          && source foo/bin/activate \
          && ansible --version
      - name: Install a default Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          python3 -m pip install -U pip 'coverage[toml]'
          python3 -m pip install 'tox>=4.0.0'
      - name: Run tox -e ${{ matrix.passed_name }}
        run: |
          ${{ matrix.PREFIX }} tox -e ${{ matrix.passed_name }}
        continue-on-error: ${{ matrix.experimental || false }}

      - name: Combine coverage data
        if: ${{ startsWith(matrix.passed_name, 'py') }}
        # produce a single .coverage file at repo root
        run: tox -e coverage

      - name: Upload coverage data
        if: ${{ startsWith(matrix.passed_name, 'py') }}
        uses: codecov/codecov-action@v3
        with:
          name: ${{ matrix.passed_name }}
          fail_ci_if_error: false # see https://github.com/codecov/codecov-action/issues/598
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true # optional (default = false)

  check:
    if: always()

    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
