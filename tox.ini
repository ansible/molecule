[tox]
minversion = 3.18.0
envlist =
    lint
    docs
    packaging
    dockerfile
    # keep only N,N-1 ansible versions
    py{36,37,38,39}
    py{36,37,38,39}-{devel}

# do not enable skip missing to avoid CI false positives
skip_missing_interpreters = False
isolated_build = True

requires =
    # 2020-resolver
    pip >= 20.2.4

[testenv]
usedevelop = True
# do not put * in passenv as it may break builds do to reduced isolation
passenv =
    CI
    CONTAINER_*
    DOCKER_*
    GITHUB_*
    HOME
    PIP_*
    PODMAN_*
    PUBLISH
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
setenv =
    ANSIBLE_CONFIG={toxinidir}/.ansible.cfg
    ANSIBLE_DISPLAY_FAILED_STDERR=1
    ANSIBLE_NOCOWS=1
    ANSIBLE_VERBOSITY=1
    MOLECULE_NO_LOG=0
    PIP_CONSTRAINT = {toxinidir}/constraints.txt
    devel: PIP_CONSTRAINT=/dev/null
    PIP_DISABLE_PIP_VERSION_CHECK=1
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
    _EXTRAS=-l --cov=molecule --no-cov-on-fail --cov-report xml:{envlogdir}/coverage.xml --html={envlogdir}/reports.html --self-contained-html
deps =
    devel: ansible>=2.10.0a2,<2.11
    # pytest-molecule not used but we want to check that it does not conflict
    devel: git+https://github.com/ansible-community/pytest-molecule#egg=pytest-molecule
    dockerfile: ansible>=2.10
    selinux
    py{36,37}: importlib-metadata<2,>=0.12
    py: ansible-base
extras =
    docker
    lint
    podman
    test
    windows
; commands_pre =
;     find {toxinidir} -type f -not -path '{toxinidir}/.tox/*' -path '*/__pycache__/*' -name '*.py[c|o]' -delete
;     sh -c 'find {homedir}/.cache -type d -path "*/molecule_*" -exec rm -rfv \{\} +;'
commands =
    ansibledevel: ansible-galaxy install git+https://github.com/ansible-collections/community.general.git
    dockerfile: ansible-galaxy install community.docker
    # failsafe as pip may install incompatible dependencies
    pip check
    # failsafe for preventing changes that may break pytest collection
    sh -c "PYTEST_ADDOPTS= python -m pytest -p no:cov --collect-only"
    # -n auto used only on unit as is not supported by functional yet
    # html report is used by Zuul CI to display reports
    python -m pytest {env:_EXTRAS} {env:PYTEST_ADDOPTS:} {posargs}

allowlist_externals =
    find
    rm
    sh

[testenv:lint]
description = Runs all linting tasks
# python pinned in order to have pip-compile output reproducible
basepython = python3.9
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps =
    pre-commit>=2.14.0
    pip-tools>=6.2.0
setenv =
  {[testenv]setenv}
  # without his upgrade would likely not do anything
  PIP_CONSTRAINT = /dev/null
extras =
skip_install = true
usedevelop = false

[testenv:deps]
description = Bump all test dependencies
# we reuse the lint environment
envdir = {toxworkdir}/lint
skip_install = true
deps = {[testenv:lint]deps}
setenv = {[testenv:lint]setenv}
commands =
  # manual hook calls the optional pip-compile-upgrade hook
  {[testenv:lint]commands} --hook-stage manual pip-compile-upgrade

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
# doc requires py3 due to use of f'' strings and using only python3 as
# basepython risks using python3.4 which is not supported.
basepython = python3
passenv = *
usedevelop = False
commands =
    python -m sphinx \
      -a -n -W \
      -b html --color \
      -d "{toxinidir}/docs/docstree" \
      docs/ "{toxinidir}/docs/docstree/html"

    # Print out the output docs dir and a way to serve html:
    python -c \
    'import pathlib; '\
    'docs_dir = pathlib.Path(r"{toxinidir}") / "docs/docstree/html"; index_file = docs_dir / "index.html"; print(f"\nDocumentation available under `file://\{index_file\}`\n\nTo serve docs, use `python3 -m http.server --directory \{docs_dir\} 0`\n")'
extras =
    ansible-base
    docs

[testenv:docs-livereload]
description = Invoke sphinx-autobuild to build and reload the HTML docs
basepython = {[testenv:docs]basepython}
passenv = {[testenv:docs]passenv}
usedevelop = {[testenv:docs]usedevelop}
commands =
    python -m sphinx_autobuild docs/ "{toxworkdir}/docs/html"
deps =
    sphinx-autobuild>=0.7.1,<1.0
extras =
    docs

[testenv:dockerfile]
description = Tests validity of embedded Dockerfile template used by docker driver
commands =
    ansible-playbook src/molecule/data/validate-dockerfile.yml
extras =
    docker
    selinux

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
deps =
    check-manifest
    collective.checkdocs >= 0.2
    pep517 >= 0.8.2
    pip >= 20.2.2
    toml >= 0.10.1
    twine >= 3.2.0  # pyup: ignore
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m check_manifest
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    sh -c "python -m twine check {toxinidir}/dist/*"

[testenv:snap]
description = Builds a snap package
usedevelop = false
skip_install = true
commands =
    sh -c "type snapcraft && snapcraft build"

[testenv:eco]
description = Smoketest of combining all known to be maintained plugins (ecosystem)
pip_pre = true
extras =
    # we install test extra in order to validate it does not drag ansible in
    test
deps =
    ansible-core >= 2.11
    molecule-azure >= 0.5.0
    molecule-containers >= 1.0.0
    molecule-digitalocean >= 0.1
    molecule-docker >= 1.0.2
    molecule-ec2 >= 0.3
    molecule-gce >= 0.2
    molecule-hetznercloud >= 1.3.0
    molecule-libvirt >= 0.0.3
    molecule-lxd >= 0.2
    molecule-openstack >= 0.3
    molecule-podman >= 1.0.1
    molecule-vagrant >= 0.6.1
    tox-ansible >= 1.1.0
    pipdeptree >= 2.0.0
commands =
    pip check
    # disabled fails safe because we now install ansible-base on purpose
    # as the preinstalled version of ansible from github, cannot be called
    # when a virtualenv is activated.
    # fail-safe: stop if ansible can be imported, it means it was dragged in
    # python -c "import importlib, sys; sys.exit(importlib.util.find_spec('ansible') != None)"
    pipdeptree --reverse -e pip,pbr,six,setuptools,toml,urllib3
    molecule --version
    molecule drivers
    bash ./tools/smoketest.sh
allowlist_externals =
    bash
