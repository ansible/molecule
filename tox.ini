[tox]
minversion = 3.7.0
envlist =
    lint
    py{27,35,36,37}-ansible{25,26,27}-{functional,unit}
    format-check
    doc
skipdist = True
skip_missing_interpreters = True

[testenv]
usedevelop = True
passenv = *
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps =
    -rrequirements.txt
    -rtest-requirements.txt
    ansible24: ansible>=2.4,<2.5
    ansible25: ansible>=2.5,<2.6
    ansible26: ansible>=2.6,<2.7
    ansible27: ansible>=2.7,<2.8
    ansibledevel: git+https://github.com/ansible/ansible.git
extras =
    azure
    docker
    docs
    ec2
    gce
    linode
    lxc
    openstack
    vagrant
    windows
commands_pre =
    find {toxinidir} -type f -not -path '{toxinidir}/.tox/*' -path '*/__pycache__/*' -name '*.py[c|o]' -delete
commands =
    unit: pytest test/unit/ --cov={toxinidir}/molecule/ --no-cov-on-fail {posargs}
    functional: pytest test/functional/ {posargs}
    lint: flake8
    lint: yamllint -s test/ molecule/
whitelist_externals =
    find
# Enabling sitepackages is needed in order to avoid encountering exceptions
# caused by missing selinux python bindinds in ansible modules like template.
# Selinux python bindings are binary and they cannot be installed using pip
# in virtualenvs. Details: https://github.com/ansible/molecule/issues/1724
sitepackages = true

[testenv:lint]
deps =
    -rlint-requirements.txt
extras =
skip_install = true
usedevelop = false

[testenv:format]
commands =
    yapf -i -r molecule/ test/
deps = yapf>=0.25.0,<2
extras =
skip_install = true
usedevelop = false

[testenv:format-check]
commands =
    yapf -d -r molecule/ test/
deps = {[testenv:format]deps}
extras = {[testenv:format]extras}
skip_install = true
usedevelop = false

[testenv:doc]
# doc requires py3 due to use of f'' strings and using only python3 as
# basepython risks using python3.4 which is not supported.
basepython = python3.7
passenv = *
commands =
    python setup.py build_sphinx -n -W --builder=html
extras =
    docs

[testenv:pur]
commands=
    pur -r requirements.txt

[testenv:metadata-validation]
deps =
    collective.checkdocs
    twine
usedevelop = False
# Ref: https://twitter.com/di_codes/status/1044358639081975813
commands =
    python -m setup checkdocs check --metadata --restructuredtext --strict --verbose
    twine check .tox/dist/*

[testenv:build-docker]
# skip under Windows
platform = ^darwin|^linux
# `usedevelop = True` overrided `skip_install` instruction, it's unwanted
usedevelop = False
# don't install Molecule in this env
skip_install = True
# don't install any Python dist deps
deps =
  pbr
#  setuptools_scm
# reset pre-commands
commands_pre =
# build the docker container
commands =
    sh -c '\
    TAG=$(python -c "from pbr.packaging import get_version; print(get_version(\".\"))") && \
    #TAG=$(python -c "from setuptools_scm import get_version; print(get_version())") && \
    echo Building version "$TAG"... && \
    sudo docker build \
        --pull --rm \
        {posargs:-t ansible/molecule:$TAG} .\
    '
whitelist_externals =
    sh
