[tox]
minversion = 3.7.0
envlist =
    lint
    py{27,35,36,37}-ansible{25,26,27}-{functional,unit}
    doc
skipdist = True
skip_missing_interpreters = True

[testenv]
usedevelop = True
passenv = *
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps =
    -rrequirements.txt
    -rtest-requirements.txt
    ansible24: ansible>=2.4,<2.5
    ansible25: ansible>=2.5,<2.6
    ansible26: ansible>=2.6,<2.7
    ansible27: ansible>=2.7,<2.8
    ansibledevel: git+https://github.com/ansible/ansible.git
extras =
    azure
    docker
    docs
    ec2
    gce
    linode
    lxc
    openstack
    vagrant
    windows
commands_pre =
    find {toxinidir} -type f -not -path '{toxinidir}/.tox/*' -path '*/__pycache__/*' -name '*.py[c|o]' -delete
commands =
    unit: pytest test/unit/ --cov={toxinidir}/molecule/ --no-cov-on-fail {posargs}
    functional: pytest test/functional/ {posargs}
    lint: flake8
    lint: yamllint -s test/ molecule/
whitelist_externals =
    bash
    find
    yapf

[testenv:lint]
deps =
    -rlint-requirements.txt
extras = []
skip_install = true
tags =
    lint
usedevelop = false
commands =
    yapf -i -r molecule/ test/
    bash -c 'test -z \"$(git status --porcelain | tee /dev/fd/2)\"'

[testenv:doc]
# doc requires py3 due to use of f'' strings and using only python3 as
# basepython risks using python3.4 which is not supported.
basepython = python3.7
passenv = *
commands =
    python setup.py build_sphinx -n -W --builder=html
extras =
    docs

[testenv:pur]
commands=
    pur -r requirements.txt

[testenv:py27-ansible25-unit]
tags =
    unit

[testenv:py35-ansible25-unit]
tags =
    unit

[testenv:py36-ansible25-unit]
tags =
    unit

[testenv:py37-ansible25-unit]
tags =
    unit

[testenv:py27-ansible26-unit]
tags =
    unit

[testenv:py35-ansible26-unit]
tags =
    unit

[testenv:py36-ansible26-unit]
tags =
    unit

[testenv:py37-ansible26-unit]
tags =
    unit

[testenv:py27-ansible27-unit]
tags =
    unit

[testenv:py35-ansible27-unit]
tags =
    unit

[testenv:py36-ansible27-unit]
tags =
    unit

[testenv:py37-ansible27-unit]
tags =
    unit

[testenv:py27-ansible25-functional]
tags =
    functional

[testenv:py35-ansible25-functional]
tags =
    functional

[testenv:py36-ansible25-functional]
tags =
    functional

[testenv:py37-ansible25-functional]
tags =
    functional

[testenv:py27-ansible26-functional]
tags =
    functional

[testenv:py35-ansible26-functional]
tags =
    functional

[testenv:py36-ansible26-functional]
tags =
    functional

[testenv:py37-ansible26-functional]
tags =
    functional

[testenv:py27-ansible27-functional]
tags =
    functional

[testenv:py35-ansible27-functional]
tags =
    functional

[testenv:py36-ansible27-functional]
tags =
    functional

[testenv:py37-ansible27-functional]
tags =
    functional

[testenv:metadata-validation]
deps =
    collective.checkdocs
    twine
usedevelop = False
# Ref: https://twitter.com/di_codes/status/1044358639081975813
commands =
    python -m setup checkdocs check --metadata --restructuredtext --strict --verbose
    twine check .tox/dist/*
