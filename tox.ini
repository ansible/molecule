[tox]
minversion = 3.7.0
envlist =
    build-docker
    doc
    format-{check,enforce}
    lint
    metadata-validation
    py{27,35,36,37}-ansible{25,26,27}-{functional,unit}
skipdist = True
skip_missing_interpreters = True

[testenv]

passenv = *
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps =
    ansible24: ansible>=2.4,<2.5
    ansible25: ansible>=2.5,<2.6
    ansible26: ansible>=2.6,<2.7
    ansible27: ansible>=2.7,<2.8
    ansibledevel: git+https://github.com/ansible/ansible.git
    build-docker: pbr
    format-{check,enforce}: yapf>=0.25.0,<2
    {functional,unit}: -rtest-requirements.txt
    lint: -rlint-requirements.txt
    metadata-validation: collective.checkdocs
    metadata-validation: twine
extras =
    {functional,unit}: azure
    {functional,unit}: docker
    doc: docs
    {functional,unit}: ec2
    {functional,unit}: gce
    {functional,unit}: linode
    {functional,unit}: lxc
    {functional,unit}: openstack
    {functional,unit}: vagrant
    {functional,unit}: windows
commands_pre =
    find {toxinidir} -type f -not -path '{toxinidir}/.tox/*' -path '*/__pycache__/*' -name '*.py[c|o]' -delete
commands =
    doc: python setup.py build_sphinx -n -W --builder=html
    format-check: yapf -d -r molecule/ test/
    format-enforce: yapf -i -r molecule/ test/
    functional: pytest test/functional/ {posargs}
    lint: flake8
    lint: yamllint -s test/ molecule/
    metadata-validation: python -m setup checkdocs check --metadata --restructuredtext --strict --verbose
    metadata-validation: twine check .tox/dist/*
    pur: pur -r requirements.txt
    unit: pytest test/unit/ --cov={toxinidir}/molecule/ --no-cov-on-fail {posargs}
skip_install =
  # install Python dist dependencies in following environments:
  {doc,functional,metadata-validation,unit}: false
  # don't install any Python dist dependencies in following environments:
  {build-docker,format,lint,pur}: true
usedevelop =
  # don't install Molecule in following environments:
  {build-docker,format,lint,metadata-validation,pur}: false
  # install Molecule in following environments:
  {doc,functional,unit}: true
whitelist_externals =
    find
# Enabling sitepackages is needed in order to avoid encountering exceptions
# caused by missing selinux python bindinds in ansible modules like template.
# Selinux python bindings are binary and they cannot be installed using pip
# in virtualenvs. Details: https://github.com/ansible/molecule/issues/1724
sitepackages = true

[doc]
# basepython can't be put in the testenv section
# doc requires py3 due to use of f'' strings and using only python3 as
# basepython risks using python3.4 which is not supported.
basepython = python3.7

[testenv:build-docker]
# skip under Windows
platform = ^darwin|^linux
#  setuptools_scm
# reset pre-commands
commands_pre =
# build the docker container
commands =
    sh -c '\
    TAG=$(python -c "from pbr.packaging import get_version; print(get_version(\".\"))") && \
    #TAG=$(python -c "from setuptools_scm import get_version; print(get_version())") && \
    echo Building version "$TAG"... && \
    sudo docker build \
        --pull --rm \
        {posargs:-t ansible/molecule:$TAG} .\
    '
whitelist_externals =
    sh
