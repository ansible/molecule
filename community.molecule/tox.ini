[tox]
requires =
    pip>=2.20.3
    tox>=4.27
    tox-ansible>=25.5.5
    tox-extra>=2.1.1
    tox-uv>=1.26
env_list =
    lint
    docs
    packaging
    dockerfile
    py{312, 311, 310}
    py{312, 311, 310}-{devel}
skip_missing_interpreters = false

[testenv]
package = editable
skip_install = true
deps =
    ansible-dev-tools
    pytest
    devel: ansible-core @ git+https://github.com/ansible/ansible.git  # GPLv3+
    dockerfile: ansible>=2.14
extras =
    docker
    lint
    podman
    test
    windows
pass_env =
    CI
    CONTAINER_*
    DOCKER_*
    GITHUB_*
    HOME
    PIP_*
    PODMAN_*
    PUBLISH
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
set_env =
    ANSIBLE_CALLABLE_WHITELIST = {env:ANSIBLE_CALLABLE_WHITELIST:timer,profile_roles}
    ANSIBLE_CONFIG = {tox_root}/.ansible.cfg
    ANSIBLE_DISPLAY_FAILED_STDERR = 1
    ANSIBLE_HOME = {tox_root}
    ANSIBLE_VERBOSITY = 1
    MOLECULE_NO_LOG = 0
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONUNBUFFERED = 1
    _EXTRAS = -l --cov=molecule --no-cov-on-fail --cov-report xml:{env_log_dir}/coverage.xml --html={env_log_dir}/reports.html --self-contained-html
commands =
    ansibledevel: ansible-galaxy install git+https://github.com/ansible-collections/community.general.git
    ade install --isolation-mode=none -e .
    ansible-doc --list -t filter community.molecule
    pip check
    sh -c "PYTEST_ADDOPTS= python -m pytest -p no:cov --collect-only 2>&1 >{env_log_dir}/collect.log"
    python -m pytest molecule/test/unit/ {env:_EXTRAS} {env:PYTEST_ADDOPTS:} {posargs}
allowlist_externals =
    find
    rm
    sh
install = false

[testenv:lint]
description = Runs all linting tasks
skip_install = true
deps =
    pre-commit>=4.1
    pre-commit-uv>=4.1.4
extras =
commands =
    python -m pre_commit run {posargs:--all}

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
base_python = python3
extras =
    docs
pass_env =
    *
commands =
    python -m sphinx \
      -a -n -W \
      -b html --color \
      -d "{tox_root}/docs/docstree" \
      docs/ "{tox_root}/docs/docstree/html"
    python -c \
      'import pathlib; ' \
      'docs_dir = pathlib.Path(r"{tox_root}") / "docs/docstree/html"; index_file = docs_dir / "index.html"; print(f"\nDocumentation available under `file://\{index_file\}`\n\nTo serve docs, use `python3 -m http.server --directory \{docs_dir\} 0`\n")'

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
skip_install = true
deps =
    collective.checkdocs>=0.2
    pep517>=0.8.2
    pip>=20.2.2
    toml>=0.10.1
    twine>=3.2
set_env =
commands =
    rm -rfv {tox_root}/dist/
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {tox_root}/dist/ \
      {tox_root}
    sh -c "python -m twine check {tox_root}//dist/*"
    sh -c "cd collection && make"

[testenv:docs-livereload]
description = Invoke sphinx-autobuild to build and reload the HTML docs
base_python = {[testenv:docs]base_python}
deps =
    sphinx-autobuild<1.0,>=0.7.1
extras =
    docs
pass_env =
    {[testenv:docs]pass_env}
commands =
    python -m sphinx_autobuild docs/ "{work_dir}/docs/html"

[ansible]
skip =
    2.15
    2.16
    2.17
    devel
    milestone
